{"version":3,"sources":["assets/sounds/simonSound1.mp3","assets/sounds/simonSound2.mp3","assets/sounds/simonSound3.mp3","assets/sounds/simonSound4.mp3","assets/sounds/simonSound5.mp3","assets/sounds/success.flac","assets/images/enemy1.svg","assets/images/enemy2.svg","assets/images/enemy3.svg","assets/images/rocket.svg","assets/images/fire.svg","serviceWorker.js","actionTypes/index.js","assets/index.js","components/SpaceBarrage/StyledComponents/index.js","resources/index.js","components/SpaceBarrage/Enemy.js","helpers/spaceBarrageHelpers.js","helpers/connect4Helpers.js","helpers/index.js","helpers/simonSaysHelpers.js","reducers/connect4Reducer.js","reducers/simonSaysReducer.js","reducers/index.js","actions/index.js","components/GameCard.js","components/Index.js","components/Header.js","components/Connect4/Cell.js","components/Connect4/Column.js","components/Connect4/Container.js","components/Connect4/MessageOverlay.js","components/Connect4/index.js","components/SimonSays/Button.js","components/SimonSays/Score.js","components/SimonSays/ControlButtons.js","components/SimonSays/Controls.js","components/SimonSays/index.js","context/index.js","components/SpaceBarrage/Ship.js","components/SpaceBarrage/Score.js","components/SpaceBarrage/Guide.js","components/SpaceBarrage/Container.js","components/SpaceBarrage/GameOver.js","components/SpaceBarrage/Screen.js","components/SpaceBarrage/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","GAME_END","GAME_START","HALT_INPUT","ALLOW_INPUT","BUTTON_PRESS","GAME_CHANGE_THEME","ADD_TO_PLAYBACK_SEQUENCE","sounds","firstSound","secondSound","thirdSound","fourthSound","fithSound","sixthSound","spaceBarrageSVGs","enemy1","enemy2","enemy3","rocket","fire","enemies","AppSC","styled","div","_templateObject","ScreenSC","_templateObject2","linkShudder","ContainerSC","_templateObject3","GameOverSC","_templateObject4","EnemySC","_templateObject5","helpers","randomUpTo","moveY","concat","ShipContainerSC","_templateObject6","props","rotate","ShipSC","_templateObject7","FireSC","_templateObject8","flame","StarSC","_templateObject9","x","sp","delay","SmStarSC","_templateObject10","MdStarSC","_templateObject11","LgStarSC","_templateObject12","GuideSC","_templateObject13","KeycapSC","span","_templateObject14","ScoreSC","_templateObject15","keyframes","_templateObject16","_templateObject17","_templateObject18","KEYS","Enemy","react_default","a","createElement","className","enemiesSVGS","updateEnemies","shipX","document","querySelector","getBoundingClientRect","forEach","enemy","enemyDim","y","isShipHit","style","webkitAnimation","animation","animationDuration","setTimeout","left","background","backgroundSize","resetEnemy","score","decayVelocity","rVelocity","lVelocity","velocity","areIdentical","arr","every","v","spaceBarrageHelpers","tick","App","handleKeys","e","key","keyCode","reload","addStars","n","rX","rDelay","stars","i","push","addEnemies","Object","toConsumableArray","Array","keys","map","initialState","simonSaysHelpers","Promise","r","getNextColorScheme","buttonColors","length","colorScheme","parseScore","s","parseInt","hs","highScore","parsedScore","parsedHighScore","objectSpread","connect4Helpers","checkGameBoard","gameBoard","winningPeices","columnIndex","column","cellIndex","verticalGroup","row","_loop","rowIndex","rows","horizontalGroup","diagonalYIndex","diagonalGroupXIndex","diagonalGroup","upperLimit","Math","floor","random","isPlaying","currentPlayer","winningPieces","showOverlay","hScore","inputPause","currentButton","playbackSequence","playerPlaybackSequence","combineReducers","connect4","arguments","undefined","action","type","newState","playerOneTime","playerTwoTime","simonSays","Control","actionTypes","newPlayerPlaybackSequence","buttonIndex","soundEffect","Audio","src","volume","play","newPlaybackSequence","startGame","haltInput","allowInput","buttonPress","changeTheme","colorSchemeId","resetGame","addPiece","GameCard","width","Card","CardImg","top","alt","CardBody","CardTitle","CardSubtitle","CardText","es_Button","Index","body","backgroundColor","components_GameCard","React","Component","Header","NavLink","exact","to","Cell","cellValue","winningPiece","isFirstFreeCell","cellStyle","playerPieceStyle","playerPiece","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","Column","columnValues","firstFreeCell","findIndex","hasWinningPieces","some","winningPeice","cells","isWinningPiece","Connect4_Cell","onClick","Container","Columns","MessageOverlay","winningPlayer","overlay","Connect4","this","columns","index","Connect4_Column","Fragment","Connect4_MessageOverlay","Connect4_Container","Button","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","registerButtonPress","assertThisInitialized","setState","show","currentTime","color","buttonStyle","overlayStyle","Score","CSSTransition","childContextTypes","transitionStyles","enterStyle","transform","transit","leaveStyle","activeStyle","ControlButtons","lib","assign","active","Controls","SimonSays_Score","SimonSays_ControlButtons","protoTypes","PropTypes","string","isRequired","bool","func","number","showPlaybackSequence","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","refs","stop","prevState","_this2","buttonComponents","buttonColor","Button_Button","ref","SimonSays_Controls","Context","createContext","Provider","withContext","Consumer","context","memo","_props$context","Guide","SpaceBarrage_Score","Ship","GameOver","Screen","_ref","SpaceBarrage_Container_Container","setInterval","querySelectorAll","addEventListener","clearInterval","value","Screen_Screen","dispatch","bindActionCreators","actions","_this$props","BrowserRouter","components_Header","Switch","Route","path","render","components_Index","components_SimonSays","components_Connect4","SpaceBarrage_App","connect","store","createStore","reducer","ReactDOM","es","src_App_0","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5edb8261.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/simonSound1.319c7710.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound2.c3c86e71.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound3.f3c18b98.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound4.f4a912ee.mp3\";","module.exports = __webpack_public_path__ + \"static/media/simonSound5.90caa9b2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/success.0d0e62da.flac\";","module.exports = __webpack_public_path__ + \"static/media/enemy1.eefd8f35.svg\";","module.exports = __webpack_public_path__ + \"static/media/enemy2.bb267ab8.svg\";","module.exports = __webpack_public_path__ + \"static/media/enemy3.e7e49935.svg\";","module.exports = __webpack_public_path__ + \"static/media/rocket.7371d983.svg\";","module.exports = __webpack_public_path__ + \"static/media/fire.58ef52ef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// Simon Says\r\nexport const GAME_END = 'GAME_END';\r\nexport const GAME_START = 'GAME_START';\r\nexport const HALT_INPUT = 'HALT_INPUT';\r\nexport const ALLOW_INPUT = 'ALLOW_INPUT';\r\nexport const BUTTON_PRESS = 'BUTTON_PRESS';\r\nexport const GAME_CHANGE_THEME = 'GAME_CHANGE_THEME';\r\nexport const ADD_TO_PLAYBACK_SEQUENCE = 'ADD_TO_PLAYBACK_SEQUENCE';\r\n\r\n// Connect4\r\nexport const ADD_PIECE = 'ADD_PIECE';\r\nexport const RESET_GAME = 'RESET_GAME';\r\n","import firstSound from './sounds/simonSound1.mp3';\r\nimport secondSound from './sounds/simonSound2.mp3';\r\nimport thirdSound from './sounds/simonSound3.mp3';\r\nimport fourthSound from './sounds/simonSound4.mp3';\r\nimport fithSound from './sounds/simonSound5.mp3';\r\nimport sixthSound from './sounds/success.flac';\r\n\r\nimport enemy1 from './images/enemy1.svg';\r\nimport enemy2 from './images/enemy2.svg';\r\nimport enemy3 from './images/enemy3.svg';\r\nimport rocket from './images/rocket.svg';\r\nimport fire from './images/fire.svg';\r\n\r\nexport const colorSchemes = [\r\n  ['#e74c3c', '#f1c40f', '#2ecc71', '#9b59b6'],\r\n  ['#f0f', '#fff', '#f00', '#0ff'],\r\n  ['#2ecc71', '#9b59b6', '#fff', '#f0f'],\r\n];\r\n\r\nexport const sounds = [\r\n  firstSound,\r\n  secondSound,\r\n  thirdSound,\r\n  fourthSound,\r\n  fithSound,\r\n  sixthSound,\r\n];\r\n\r\nexport const spaceBarrageSVGs = {\r\n  enemy1,\r\n  enemy2,\r\n  enemy3,\r\n  rocket,\r\n  fire,\r\n};\r\n","import styled, { keyframes } from 'styled-components';\n\nimport { helpers } from '../../../helpers';\n\nimport { spaceBarrageSVGs } from '../../../assets';\n\nconst { enemy1, enemy2, enemy3, rocket, fire } = spaceBarrageSVGs;\nconst enemies = [enemy1, enemy2, enemy3];\n\nexport const AppSC = styled.div`\n  height: 100%\n  width: 1080px;\n  color: lime;\n  margin: 0px 0px;\n  display: flex;\n  filter: blur(1px);\n  position: relative;\n  align-items: center;\n  background: rgba(2, 5, 0, 1);\n  flex-direction: column;\n  border-radius: 25px 25px 25px 25px;\n  border: 5px solid #aaa;\n  font-family: 'PressStart2P-Regular';\n  `;\n\nexport const ScreenSC = styled.div`\n  width: 1080px;\n  height: 800px;\n  overflow: hidden;\n  text-align: center;\n  border: 10px solid #aaa;\n  border-radius: 25px 25px 25px 25px;\n  animation: ${() => linkShudder} 3s linear infinite;\n`;\n\nexport const ContainerSC = styled.div`\n  height: 100%;\n  width: 100%;\n  position: relative;\n`;\n\nexport const GameOverSC = styled.div`\n  top: 0;\n  left: 0;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  display: flex;\n  font-size: 2rem;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  background: rgba(11, 11, 11, 1);\n`;\n\nexport const EnemySC = styled.div`\n  width: 80px;\n  height: 80px;\n  display: inline-block;\n  background: url(${() => enemies[helpers.randomUpTo(2)]}) center;\n  background-size: cover;\n  position: absolute;\n  left: 0px;\n  top: -100px;\n  animation: ${() => moveY};\n  animation-duration: ${() => `${helpers.randomUpTo(8)}s`};\n  animation-timing-function: linear;\n  animation-iteration-count: infinite;\n`;\n\nexport const ShipContainerSC = styled.div`\n  left: 50%;\n  width: 80px;\n  height: 80px;\n  bottom: 80px;\n  position: absolute;\n  transform: translate(-50%, 0%);\n  transform: rotate(${props => props.rotate}deg);\n`;\n\nexport const ShipSC = styled.div`\n  z-index: 5;\n  width: 80px;\n  height: 80px;\n  background: url(${rocket});\n  background-size: cover;\n`;\n\nexport const FireSC = styled.div`\n  width: 80px;\n  height: 80px;\n  margin-top: -3px;\n  transform-origin: top;\n  background-size: cover;\n  background-image: url(${fire});\n  animation: ${() => flame} 400ms linear 0ms infinite normal;\n`;\n\nconst StarSC = styled.div`\n  top: -10px;\n  z-index: -1;\n  position: absolute;\n  background-color: Cyan;\n  left: ${props => props.x}px;\n  animation: ${() => moveY} ${props => props.sp}s linear\n    ${props => `${props.delay}ms`} infinite normal;\n`;\n\nexport const SmStarSC = styled(StarSC)`\n  width: 1px;\n  height: 1px;\n`;\n\nexport const MdStarSC = styled(StarSC)`\n  width: 2px;\n  height: 2px;\n`;\n\nexport const LgStarSC = styled(StarSC)`\n  width: 3px;\n  height: 3px;\n`;\n\nexport const GuideSC = styled.div`\n  z-index: 9;\n  opacity: 1;\n  bottom: 0;\n  color: Cyan;\n  width: 100%;\n  margin-bottom: 20px;\n  font-size: 0.7rem;\n  position: absolute;\n`;\n\nexport const KeycapSC = styled.span`\n  padding: 5px;\n  margin-left: 4px;\n  margin-right: 4px;\n  border-radius: 4px;\n  line-height: 1.8em;\n  color: MediumOrchid;\n  background: transparent;\n  border: 1px solid MediumOrchid;\n`;\n\nexport const ScoreSC = styled.div`\n  top: 0;\n  left: 0;\n  width: 50px;\n  height: 50px;\n  font-size: 2em;\n  align-self: start;\n  padding: 40px 30px;\n  position: absolute;\n  text-align: center;\n`;\n\n// Stars and Enemies will use this to go from end to end\n// of the Container\nconst moveY = keyframes`\n  0%    { transform: translateY(0px);  }\n  100%  { transform: translateY(1050px);   }\n`;\n\n// A flicker effect for the rocket's flame\nconst flame = keyframes`\n  0%   { transform: scaleY(1);   }\n  50%  { transform: scaleY(0.8); }\n`;\n\n// The whole screen has this attached. To replicate a CRT TV screen\nconst linkShudder = keyframes`\n  // 10%  {                                        filter:blur(0.5px); }\n  // 15%  {                                        filter:blur(1px);   }\n  // 20%  {                                        filter:blur(0.5px); }\n  // 27%  { transform: translate(0px,0px);                             }\n  // 28%  { transform: translate(1px,0px);                             }\n  // 29%  { transform: translate(0px,0px);                             }\n  // 35%  { transform: translate(0px,0px);                             }\n  // 36%  { transform: translate(.5px,.5px);                           }\n  // 37%  { transform: translate(0px,0px);                             }\n  // 42%  { transform: translate(0px,0px);         filter:blur(0.5px); }\n  // 43%  { transform: translate(0px,0.5px);       filter:blur(1px);   }\n  // 44%  { transform: translate(0px,0px);         filter:blur(0.5px); }\n  100% { transform: translate(0px,0px);                             }\n`;\n","export const KEYS = {\r\n  SPACE: 32,\r\n  LEFT: 37,\r\n  RIGHT: 39,\r\n  A: 65,\r\n  D: 68,\r\n};\r\n","import React from 'react';\r\n\r\nimport { EnemySC } from './StyledComponents';\r\n\r\nexport default () => <EnemySC className=\"Enemy\" />;\r\n","import React from 'react';\r\n\r\nimport {\r\n  SmStarSC,\r\n  MdStarSC,\r\n  LgStarSC,\r\n} from '../components/SpaceBarrage/StyledComponents';\r\nimport { KEYS } from '../resources';\r\n\r\nimport { spaceBarrageSVGs } from '../assets';\r\nimport Enemy from '../components/SpaceBarrage/Enemy';\r\nimport { helpers } from './index';\r\n\r\n// Space Barage\r\nconst { enemy1, enemy2, enemy3 } = spaceBarrageSVGs;\r\nconst enemiesSVGS = [enemy1, enemy2, enemy3];\r\nconst maxX = 1025;\r\nconst minX = -40;\r\n\r\nexport default () => ({\r\n  // Runs every 50ms in order to assess and adjust state\r\n  tick: App => {\r\n    const enemies = App.enemies;\r\n    let state = App.state;\r\n\r\n    updateEnemies(enemies, state);\r\n    state = decayVelocity(state);\r\n\r\n    return state;\r\n  },\r\n\r\n  // Move the ship through keyboard input\r\n  handleKeys: (state, e) => {\r\n    const { rVelocity, lVelocity, shipX } = state;\r\n    const key = e.keyCode;\r\n\r\n    if (key === KEYS.RIGHT || key === KEYS.D)\r\n      state.rVelocity = rVelocity < 20 ? rVelocity + 2 : 20;\r\n\r\n    if (key === KEYS.LEFT || key === KEYS.A)\r\n      state.lVelocity = lVelocity > -20 ? lVelocity - 2 : -20;\r\n\r\n    state.shipX = shipX + state.lVelocity + state.rVelocity;\r\n\r\n    if (key === KEYS.SPACE) {\r\n      window.location.reload();\r\n    }\r\n\r\n    return state;\r\n  },\r\n\r\n  // Creates 'n' star elements with animation\r\n  // Returns array of stars\r\n  addStars: n => {\r\n    const rX = () => helpers.randomUpTo(maxX);\r\n    const rDelay = () => 0 - helpers.randomUpTo(4800);\r\n\r\n    const stars = [];\r\n    for (let i = 0; i < n; ++i) {\r\n      stars.push(\r\n        <SmStarSC key={'a' + i} x={rX()} sp={12} delay={rDelay()} />,\r\n        <MdStarSC key={'b' + i} x={rX()} sp={8} delay={rDelay()} />,\r\n        <LgStarSC key={'c' + i} x={rX()} sp={6} delay={rDelay()} />\r\n      );\r\n    }\r\n\r\n    return stars;\r\n  },\r\n\r\n  // Creates 'n' amount of enemies for the game\r\n  // Returns an array of Enemy components\r\n  addEnemies: n => [...Array(n).keys()].map(i => <Enemy key={i} />),\r\n\r\n  initialState: () => ({\r\n    score: 0,\r\n    shipX: 490,\r\n    rVelocity: 0,\r\n    lVelocity: 0,\r\n    isShipHit: false,\r\n  }),\r\n});\r\n\r\n// Randomly re-creates and places an enemy at the top\r\nconst resetEnemy = enemy => {\r\n  enemy.style.webkitAnimation = 'none';\r\n  enemy.style.animation = 'none';\r\n  enemy.style.animationDuration = `0s`;\r\n\r\n  // There is a slight delay so that the element has time\r\n  // to fully reset to the CSS Styled sheets animation\r\n  // before overriding them here\r\n  setTimeout(function() {\r\n    enemy.style.animation = '';\r\n    enemy.style.webkitAnimation = '';\r\n    enemy.style.left = `${helpers.randomUpTo(11) * 100}px`;\r\n    enemy.style.background = `url(${enemiesSVGS[helpers.randomUpTo(3)]})`;\r\n    enemy.style.animationDuration = `3s`;\r\n    enemy.style.backgroundSize = 'cover';\r\n  }, 10);\r\n};\r\n\r\n// Update enemies and conduct hit-detection on them and the ship\r\nconst updateEnemies = (enemies, state) => {\r\n  const shipX = document.querySelector('.Ship').getBoundingClientRect().x;\r\n\r\n  enemies.forEach(enemy => {\r\n    const enemyDim = enemy.getBoundingClientRect();\r\n    const { y, x } = enemyDim;\r\n\r\n    if (y > 725 && y < 875) {\r\n      if (x >= shipX - 60 && x <= shipX + 60) {\r\n        state.isShipHit = true;\r\n      }\r\n    }\r\n\r\n    if (y >= 975) {\r\n      resetEnemy(enemy);\r\n      state.score = state.score + 1;\r\n    }\r\n  });\r\n};\r\n\r\n// Lower the inertia of a moving ship\r\nconst decayVelocity = state => {\r\n  const { rVelocity, lVelocity, shipX } = state;\r\n  const velocity = lVelocity + rVelocity;\r\n\r\n  state.lVelocity = lVelocity < 0 ? lVelocity + 1 : 0;\r\n\r\n  state.rVelocity = rVelocity > 0 ? rVelocity - 1 : 0;\r\n\r\n  if (velocity >= 0) {\r\n    state.shipX = shipX <= maxX ? shipX + velocity : minX;\r\n  } else if (velocity <= 0) {\r\n    state.shipX = shipX >= minX ? shipX + velocity : maxX;\r\n  }\r\n\r\n  return state;\r\n};\r\n","export default () => ({\r\n  checkGameBoard: gameBoard => {\r\n    let winningPeices = [];\r\n    // vertical\r\n    for (let columnIndex = 0; columnIndex <= 6; columnIndex++) {\r\n      const column = gameBoard[columnIndex];\r\n\r\n      for (let cellIndex = 0; cellIndex <= 2; cellIndex++) {\r\n        if (column[cellIndex] === 0) continue;\r\n\r\n        const verticalGroup = [\r\n          column[cellIndex],\r\n          column[cellIndex + 1],\r\n          column[cellIndex + 2],\r\n          column[cellIndex + 3],\r\n        ];\r\n\r\n        if (areIdentical(verticalGroup)) {\r\n          winningPeices = [\r\n            { column: columnIndex, row: cellIndex + 0 },\r\n            { column: columnIndex, row: cellIndex + 1 },\r\n            { column: columnIndex, row: cellIndex + 2 },\r\n            { column: columnIndex, row: cellIndex + 3 },\r\n          ];\r\n        }\r\n      }\r\n    }\r\n\r\n    // horizontal\r\n    for (let rowIndex = 5; rowIndex >= 0; rowIndex--) {\r\n      const rows = gameBoard.map((column, i) => [column[rowIndex], i]);\r\n\r\n      for (let cellIndex = 0; cellIndex <= 3; cellIndex++) {\r\n        if (rows[cellIndex][0] === 0) continue;\r\n\r\n        const horizontalGroup = [\r\n          rows[cellIndex + 0][0],\r\n          rows[cellIndex + 1][0],\r\n          rows[cellIndex + 2][0],\r\n          rows[cellIndex + 3][0],\r\n        ];\r\n\r\n        if (areIdentical(horizontalGroup)) {\r\n          winningPeices = [\r\n            ...winningPeices,\r\n            { column: rows[cellIndex + 0][1], row: rowIndex },\r\n            { column: rows[cellIndex + 1][1], row: rowIndex },\r\n            { column: rows[cellIndex + 2][1], row: rowIndex },\r\n            { column: rows[cellIndex + 3][1], row: rowIndex },\r\n          ];\r\n        }\r\n      }\r\n    }\r\n\r\n    // diagonal, up-to-the-right\r\n    for (let diagonalYIndex = 0; diagonalYIndex <= 3; diagonalYIndex++) {\r\n      for (\r\n        let diagonalGroupXIndex = 0;\r\n        diagonalGroupXIndex <= 2;\r\n        diagonalGroupXIndex++\r\n      ) {\r\n        if (gameBoard[diagonalYIndex][diagonalGroupXIndex] === 0) continue;\r\n\r\n        const diagonalGroup = [\r\n          gameBoard[diagonalYIndex + 0][diagonalGroupXIndex + 0],\r\n          gameBoard[diagonalYIndex + 1][diagonalGroupXIndex + 1],\r\n          gameBoard[diagonalYIndex + 2][diagonalGroupXIndex + 2],\r\n          gameBoard[diagonalYIndex + 3][diagonalGroupXIndex + 3],\r\n        ];\r\n\r\n        if (areIdentical(diagonalGroup)) {\r\n          winningPeices = [\r\n            ...winningPeices,\r\n            { column: diagonalYIndex + 0, row: diagonalGroupXIndex + 0 },\r\n            { column: diagonalYIndex + 1, row: diagonalGroupXIndex + 1 },\r\n            { column: diagonalYIndex + 2, row: diagonalGroupXIndex + 2 },\r\n            { column: diagonalYIndex + 3, row: diagonalGroupXIndex + 3 },\r\n          ];\r\n        }\r\n      }\r\n    }\r\n\r\n    // diagonal down-to-the-right\r\n    for (let diagonalYIndex = 0; diagonalYIndex <= 3; diagonalYIndex++) {\r\n      for (\r\n        let diagonalGroupXIndex = 6;\r\n        diagonalGroupXIndex >= 0;\r\n        diagonalGroupXIndex--\r\n      ) {\r\n        if (gameBoard[diagonalYIndex][diagonalGroupXIndex] === 0) continue;\r\n\r\n        const diagonalGroup = [\r\n          gameBoard[diagonalYIndex + 0][diagonalGroupXIndex - 0],\r\n          gameBoard[diagonalYIndex + 1][diagonalGroupXIndex - 1],\r\n          gameBoard[diagonalYIndex + 2][diagonalGroupXIndex - 2],\r\n          gameBoard[diagonalYIndex + 3][diagonalGroupXIndex - 3],\r\n        ];\r\n\r\n        if (areIdentical(diagonalGroup)) {\r\n          winningPeices = [\r\n            ...winningPeices,\r\n            { column: diagonalYIndex + 0, row: diagonalGroupXIndex - 0 },\r\n            { column: diagonalYIndex + 1, row: diagonalGroupXIndex - 1 },\r\n            { column: diagonalYIndex + 2, row: diagonalGroupXIndex - 2 },\r\n            { column: diagonalYIndex + 3, row: diagonalGroupXIndex - 3 },\r\n          ];\r\n        }\r\n      }\r\n      if (winningPeices.length > 0) return winningPeices;\r\n    }\r\n  },\r\n});\r\n\r\nconst areIdentical = arr => arr.every(v => v === arr[0]);\r\n","import spaceBarrage from './spaceBarrageHelpers';\r\nimport simonSays from './simonSaysHelpers';\r\nimport connect4 from './connect4Helpers';\r\n\r\nexport const spaceBarrageHelpers = spaceBarrage();\r\nexport const simonSaysHelpers = simonSays();\r\nexport const connect4Helpers = connect4();\r\n\r\nexport const helpers = {\r\n  randomUpTo: upperLimit => Math.floor(Math.random() * upperLimit),\r\n};\r\n","export default () => ({\r\n  delay: x => new Promise(r => setTimeout(r, x)),\r\n\r\n  getNextColorScheme: state =>\r\n    state.buttonColors.length !== ++state.colorScheme ? state.colorScheme : 0,\r\n\r\n  parseScore: state => {\r\n    let s = parseInt(state.score);\r\n    let hs = parseInt(state.highScore);\r\n    const parsedScore = ++s < 10 ? `00${s}` : s < 99 ? `0${s}` : s;\r\n    const parsedHighScore = s > hs ? parsedScore : state.highScore;\r\n\r\n    return {\r\n      ...state,\r\n      score: parsedScore,\r\n      highScore: parsedHighScore,\r\n    };\r\n  },\r\n});\r\n","import * as actionTypes from '../actionTypes';\r\nimport { connect4Helpers } from '../helpers';\r\n\r\nconst initialState = {\r\n  isPlaying: true,\r\n  currentPlayer: 1,\r\n  winningPieces: [],\r\n  showOverlay: false,\r\n  gameBoard: [\r\n    [0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0],\r\n    [0, 0, 0, 0, 0, 0],\r\n  ],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_PIECE: {\r\n      if (!state.isPlaying) return state;\r\n\r\n      const newState = { ...state };\r\n\r\n      newState.gameBoard[action.columnIndex][action.rowIndex] =\r\n        newState.currentPlayer;\r\n\r\n      const winningPieces = connect4Helpers.checkGameBoard(state.gameBoard);\r\n      if (winningPieces) {\r\n        newState.winningPieces = winningPieces;\r\n        newState.showOverlay = true;\r\n        newState.isPlaying = false;\r\n      } else {\r\n        newState.currentPlayer = newState.currentPlayer === 1 ? 2 : 1;\r\n      }\r\n\r\n      return newState;\r\n    }\r\n\r\n    case actionTypes.RESET_GAME: {\r\n      return {\r\n        isPlaying: true,\r\n        currentPlayer: 1,\r\n        playerOneTime: 0,\r\n        playerTwoTime: 0,\r\n        winningPieces: [],\r\n        showOverlay: false,\r\n        gameBoard: [\r\n          [0, 0, 0, 0, 0, 0],\r\n          [0, 0, 0, 0, 0, 0],\r\n          [0, 0, 0, 0, 0, 0],\r\n          [0, 0, 0, 0, 0, 0],\r\n          [0, 0, 0, 0, 0, 0],\r\n          [0, 0, 0, 0, 0, 0],\r\n          [0, 0, 0, 0, 0, 0],\r\n        ],\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import * as actionTypes from '../actionTypes';\r\nimport { sounds, colorSchemes } from '../assets';\r\nimport { simonSaysHelpers, helpers } from '../helpers';\r\n\r\nconst initialState = {\r\n  score: '000',\r\n  hScore: '000',\r\n  colorScheme: 0,\r\n  isPlaying: false,\r\n  inputPause: false,\r\n  currentButton: null,\r\n  playbackSequence: [],\r\n  playerPlaybackSequence: [],\r\n  buttonColors: colorSchemes,\r\n};\r\n\r\nexport default function Control(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.GAME_END: {\r\n      return {\r\n        ...state,\r\n        score: '000',\r\n        isPlaying: false,\r\n        currentButton: null,\r\n        playbackSequence: [],\r\n        playerPlaybackSequence: [],\r\n      };\r\n    }\r\n\r\n    case actionTypes.GAME_START: {\r\n      const playbackSequence = [\r\n        ...state.playbackSequence,\r\n        helpers.randomUpTo(4),\r\n      ];\r\n\r\n      if (state.isPlaying) {\r\n        return Control(state, { type: actionTypes.GAME_END });\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        isPlaying: true,\r\n        playbackSequence,\r\n      };\r\n    }\r\n\r\n    case actionTypes.ALLOW_INPUT: {\r\n      return {\r\n        ...state,\r\n        inputPause: false,\r\n      };\r\n    }\r\n\r\n    case actionTypes.HALT_INPUT: {\r\n      return {\r\n        ...state,\r\n        inputPause: true,\r\n      };\r\n    }\r\n\r\n    case actionTypes.BUTTON_PRESS: {\r\n      const newPlayerPlaybackSequence = [\r\n        ...state.playerPlaybackSequence,\r\n        action.buttonIndex,\r\n      ];\r\n\r\n      // Start at the end of the array and work back\r\n      for (let i = newPlayerPlaybackSequence.length; i--; ) {\r\n        if (state.playbackSequence[i] !== newPlayerPlaybackSequence[i]) {\r\n          const soundEffect = new Audio();\r\n          soundEffect.src = sounds[4];\r\n          soundEffect.volume = 0.07;\r\n          soundEffect.play();\r\n\r\n          return Control(state, { type: actionTypes.GAME_END });\r\n        }\r\n      }\r\n\r\n      if (state.playbackSequence.length !== newPlayerPlaybackSequence.length) {\r\n        return {\r\n          ...state,\r\n          playerPlaybackSequence: newPlayerPlaybackSequence,\r\n        };\r\n      }\r\n\r\n      const soundEffect = new Audio();\r\n      soundEffect.volume = 0.6;\r\n      soundEffect.src = sounds[5];\r\n      setTimeout(() => soundEffect.play(), 200);\r\n\r\n      state = simonSaysHelpers.parseScore(state);\r\n\r\n      return Control(state, {\r\n        type: actionTypes.ADD_TO_PLAYBACK_SEQUENCE,\r\n      });\r\n    }\r\n\r\n    case actionTypes.ADD_TO_PLAYBACK_SEQUENCE: {\r\n      const newPlaybackSequence = [\r\n        ...state.playbackSequence,\r\n        helpers.randomUpTo(4),\r\n      ];\r\n\r\n      return {\r\n        ...state,\r\n        playerPlaybackSequence: [],\r\n        playbackSequence: newPlaybackSequence,\r\n      };\r\n    }\r\n\r\n    case actionTypes.GAME_CHANGE_THEME: {\r\n      return {\r\n        ...state,\r\n        colorScheme: simonSaysHelpers.getNextColorScheme(state),\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\n\r\nimport connect4Reducer from './connect4Reducer';\r\nimport simonSaysReducer from './simonSaysReducer';\r\n\r\nexport default combineReducers({\r\n  connect4: connect4Reducer,\r\n  simonSays: simonSaysReducer,\r\n});\r\n","import * as actionTypes from '../actionTypes';\r\n\r\n// Simon Says\r\nexport const endGame = () => ({ type: actionTypes.GAME_END });\r\n\r\nexport const startGame = () => ({ type: actionTypes.GAME_START });\r\n\r\nexport const haltInput = () => ({ type: actionTypes.HALT_INPUT });\r\n\r\nexport const allowInput = () => ({ type: actionTypes.ALLOW_INPUT });\r\n\r\nexport const addToPlaybackSequence = () => ({\r\n  type: actionTypes.ADD_TO_PLAYBACK_SEQUENCE,\r\n});\r\n\r\nexport const buttonPress = buttonIndex => ({\r\n  type: actionTypes.BUTTON_PRESS,\r\n  buttonIndex,\r\n});\r\n\r\nexport const changeTheme = colorSchemeId => ({\r\n  type: actionTypes.GAME_CHANGE_THEME,\r\n  colorSchemeId,\r\n});\r\n\r\n// Connect4\r\nexport const resetGame = () => ({ type: actionTypes.RESET_GAME });\r\n\r\nexport const addPiece = (rowIndex, columnIndex) => ({\r\n  type: actionTypes.ADD_PIECE,\r\n  rowIndex,\r\n  columnIndex,\r\n});\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n} from 'reactstrap';\r\n\r\nconst GameCard = props => {\r\n  return (\r\n    <div style={{ width: '315px' }}>\r\n      <Card>\r\n        <CardImg\r\n          top\r\n          width=\"100%\"\r\n          src=\"https://placeholdit.imgix.net/~text?txtsize=33&txt=318%C3%97180&w=318&h=180\"\r\n          alt=\"Card image cap\"\r\n        />\r\n        <CardBody>\r\n          <CardTitle>Card title</CardTitle>\r\n          <CardSubtitle>Card subtitle</CardSubtitle>\r\n          <CardText>\r\n            Some quick example text to build on the card title and make up the\r\n            bulk of the card's content.\r\n          </CardText>\r\n          <Button>Button</Button>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameCard;\r\n","import React from 'react';\r\n\r\nimport GameCard from './GameCard';\r\n\r\nclass Index extends React.Component {\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = 'rgb(72, 113, 133)';\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.style.backgroundColor = '';\r\n  }\r\n\r\n  render() {\r\n    return <GameCard />;\r\n  }\r\n}\r\n\r\nexport default Index;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <div className=\"header\">\r\n      <ul className=\"navbar\">\r\n        <li>\r\n          <NavLink exact={true} to=\"/\">\r\n            Home\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"about\">about</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"about\">Resume</NavLink>\r\n        </li>\r\n        <li className=\"name\">Victor Johnson</li>\r\n        <li>\r\n          <NavLink to=\"/simonsays\">Simon Says</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/connect4\">Connect4</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"/spacebarrage\">Space Barrage</NavLink>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst Cell = props => {\r\n  const { cellValue, winningPiece, isFirstFreeCell, currentPlayer } = props;\r\n\r\n  const cellStyle = `\r\n    cell \r\n    ${isFirstFreeCell ? 'glow' : ''} \r\n    ${currentPlayer === 1 ? `red` : `black`}\r\n  `;\r\n\r\n  const playerPieceStyle = `\r\n    player-piece \r\n    peice-overlay \r\n    ${cellValue === 1 ? `red` : `black`} \r\n    ${winningPiece ? 'winning-piece' : ''}\r\n  `;\r\n\r\n  const playerPiece =\r\n    cellValue !== 0 ? <div className={playerPieceStyle} /> : null;\r\n\r\n  return (\r\n    <div className=\"cell-parent\">\r\n      <div className={cellStyle} />\r\n      <ReactCSSTransitionGroup\r\n        transitionName=\"slide\"\r\n        transitionEnterTimeout={500}\r\n        transitionLeaveTimeout={300}\r\n      >\r\n        {playerPiece}\r\n      </ReactCSSTransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nCell.propTypes = {\r\n  cellValue: PropTypes.number.isRequired,\r\n  winningPiece: PropTypes.bool.isRequired,\r\n  currentPlayer: PropTypes.number.isRequired,\r\n  isFirstFreeCell: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Cell;\r\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport Cell from './Cell';\n\nconst Column = props => {\n  const {\n    addPiece,\n    isPlaying,\n    columnIndex,\n    columnValues,\n    winningPieces,\n    currentPlayer,\n  } = props;\n\n  let firstFreeCell =\n    [...columnValues].findIndex(cellValue => cellValue !== 0) - 1;\n  // Initial value with no selected cells will be -2\n  firstFreeCell = firstFreeCell === -2 ? 5 : firstFreeCell;\n\n  const hasWinningPieces =\n    winningPieces.length > 0 &&\n    winningPieces.some(winningPeice => winningPeice.column === columnIndex);\n\n  const cells = columnValues.map((cellValue, i) => {\n    const isFirstFreeCell = isPlaying && i === firstFreeCell;\n    const isWinningPiece =\n      hasWinningPieces &&\n      winningPieces.some(x => x.row === i && x.column === columnIndex);\n\n    return (\n      <Cell\n        key={i}\n        cellIndex={i}\n        cellValue={cellValue}\n        columnIndex={columnIndex}\n        winningPiece={isWinningPiece}\n        currentPlayer={currentPlayer}\n        isFirstFreeCell={isFirstFreeCell}\n      />\n    );\n  });\n\n  return (\n    <div\n      className=\"column\"\n      onClick={() => addPiece(firstFreeCell, columnIndex)}\n    >\n      {cells}\n    </div>\n  );\n};\n\nColumn.propTypes = {\n  addPiece: PropTypes.func.isRequired,\n  isPlaying: PropTypes.bool.isRequired,\n  columnIndex: PropTypes.number.isRequired,\n  columnValues: PropTypes.array.isRequired,\n  winningPieces: PropTypes.array.isRequired,\n  currentPlayer: PropTypes.number.isRequired,\n};\n\nexport default Column;\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst Container = props => (\r\n  <div className=\"connect-container\">\r\n    <div className=\"container-top\" />\r\n    <div className=\"container-body\">{props.Columns}</div>\r\n    <div className=\"container-bottom\">\r\n      <span onClick={() => props.resetGame()}>Connect4</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  Columns: PropTypes.array.isRequired,\r\n  resetGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nconst MessageOverlay = props => {\r\n  const { winningPlayer, resetGame } = props;\r\n\r\n  const overlay = (\r\n    <div className=\"message-container\">\r\n      <div className=\"message-top-half\">\r\n        <h2>{`Player ${winningPlayer} Wins!`}</h2>\r\n      </div>\r\n      <div className=\"message-bottom-half\">\r\n        <button className=\"message-button\" onClick={() => resetGame()}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={`message-overlay`}>\r\n      <ReactCSSTransitionGroup\r\n        transitionName=\"side-slide\"\r\n        transitionEnterTimeout={500}\r\n        transitionLeaveTimeout={200}\r\n      >\r\n        {overlay}\r\n      </ReactCSSTransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessageOverlay.propTypes = {\r\n  winningPlayer: PropTypes.number.isRequired,\r\n  resetGame: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MessageOverlay;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport './Connect4.css';\r\n\r\nimport Column from './Column';\r\nimport Container from './Container';\r\nimport MessageOverlay from './MessageOverlay';\r\n\r\nclass Connect4 extends React.Component {\r\n  static propTypes = {\r\n    isPlaying: PropTypes.bool.isRequired,\r\n    resetGame: PropTypes.func.isRequired,\r\n    gameBoard: PropTypes.array.isRequired,\r\n    winningPieces: PropTypes.array.isRequired,\r\n    currentPlayer: PropTypes.number.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.body.style.backgroundColor = 'rgb(7, 152, 236)';\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.body.style.backgroundColor = '';\r\n  }\r\n\r\n  render() {\r\n    const { props } = this;\r\n    const {\r\n      addPiece,\r\n      isPlaying,\r\n      resetGame,\r\n      currentPlayer,\r\n      winningPieces,\r\n      showOverlay,\r\n    } = props;\r\n\r\n    const columns = props.gameBoard.map((columnValues, index) => (\r\n      <Column\r\n        key={index}\r\n        columnIndex={index}\r\n        isPlaying={isPlaying}\r\n        addPiece={addPiece}\r\n        columnValues={columnValues}\r\n        currentPlayer={currentPlayer}\r\n        winningPieces={winningPieces}\r\n      />\r\n    ));\r\n\r\n    return (\r\n      <>\r\n        <div className=\"game-container\">\r\n          {showOverlay && (\r\n            <MessageOverlay\r\n              showOverlay={showOverlay}\r\n              resetGame={resetGame}\r\n              winningPlayer={currentPlayer}\r\n            />\r\n          )}\r\n          <Container resetGame={resetGame} Columns={columns} />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Connect4;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { sounds } from '../../assets/';\n\nexport default class Button extends Component {\n  static propTypes = {\n    index: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    isPlaying: PropTypes.bool.isRequired,\n    inputPause: PropTypes.bool.isRequired,\n    buttonPress: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { show: false };\n  }\n\n  registerButtonPress = () => {\n    const { props } = this;\n    if (!props.inputPause && props.isPlaying) {\n      this.buttonPress();\n      props.buttonPress(props.index);\n    }\n  };\n\n  buttonPress = () => {\n    this.setState({ show: true });\n\n    const soundEffect = new Audio();\n    soundEffect.src = sounds[this.props.index];\n    soundEffect.currentTime = 0.125;\n    soundEffect.play();\n\n    setTimeout(() => this.setState({ show: false }), 150);\n  };\n\n  render() {\n    const { props, state } = this;\n    const { color, inputPause } = props;\n    const { show } = state;\n\n    const buttonStyle = `button ${show && !inputPause ? 'shrink' : ''}`;\n    const overlayStyle = `overlay ${show ? 'on' : ''}`;\n\n    return (\n      <div\n        className={buttonStyle}\n        onClick={this.registerButtonPress}\n        style={{ backgroundColor: color }}\n      >\n        <div className={overlayStyle} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Score = props => (\r\n  <div className=\"game-score\">\r\n    <span className={props.isPlaying ? 'game-light-on' : 'game-light-off'}>\r\n      {props.score}\r\n    </span>\r\n  </div>\r\n);\r\n\r\nScore.propTypes = {\r\n  score: PropTypes.string.isRequired,\r\n  isPlaying: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Score;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, transit } from 'react-css-transition';\r\n\r\nCSSTransition.childContextTypes = {};\r\nconst transitionStyles = {\r\n  enterStyle: { transform: transit('translate(52.5%)', 100, 'ease-in-out') },\r\n  leaveStyle: { transform: transit('translate(0)', 100, 'ease-in-out') },\r\n  activeStyle: { transform: 'translate(52.5%)' },\r\n};\r\n\r\nconst ControlButtons = props => (\r\n  <div className=\"control-buttons\">\r\n    <div className={`game-light ${props.isPlaying ? 'game-light-on' : ''}`} />\r\n    <div onClick={() => props.startGame()} className=\"game-switch\">\r\n      <CSSTransition {...transitionStyles} active={props.isPlaying}>\r\n        <div className=\"game-switch-toggle\" />\r\n      </CSSTransition>\r\n    </div>\r\n    <div\r\n      onClick={() => props.changeTheme()}\r\n      className={`game-reset ${!props.isPlaying ? 'game-light-off' : ''}`}\r\n    />\r\n  </div>\r\n);\r\n\r\nControlButtons.propTypes = {\r\n  isPlaying: PropTypes.bool.isRequired,\r\n  startGame: PropTypes.func.isRequired,\r\n  changeTheme: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ControlButtons;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport Score from './Score';\r\nimport ControlButtons from './ControlButtons';\r\n\r\nconst Controls = props => (\r\n  <div className=\"controls\">\r\n    <div className=\"game-name\">\r\n      <span className=\"name\">simon</span>\r\n      <span className=\"game-name-buffer\" />\r\n    </div>\r\n\r\n    <div className=\"game-controls\">\r\n      <Score score={props.score} isPlaying={props.isPlaying} />\r\n      <ControlButtons\r\n        isPlaying={props.isPlaying}\r\n        startGame={props.startGame}\r\n        changeTheme={props.changeTheme}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nControls.protoTypes = {\r\n  score: PropTypes.string.isRequired,\r\n  isPlaying: PropTypes.bool.isRequired,\r\n  startGame: PropTypes.func.isRequired,\r\n  changeTheme: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Controls;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SimonSays.css';\n\nimport Button from './Button';\nimport Controls from './Controls';\nimport { simonSaysHelpers } from '../../helpers';\n\nclass Container extends Component {\n  static propTypes = {\n    score: PropTypes.string.isRequired,\n    hScore: PropTypes.string.isRequired,\n    isPlaying: PropTypes.bool.isRequired,\n    inputPause: PropTypes.bool.isRequired,\n    colorScheme: PropTypes.number.isRequired,\n    buttonColors: PropTypes.array.isRequired,\n    playbackSequence: PropTypes.array.isRequired,\n    playerPlaybackSequence: PropTypes.array.isRequired,\n  };\n\n  componentDidMount() {\n    document.body.style.backgroundColor = 'rgb(255, 95, 69)';\n  }\n\n  componentWillUnmount() {\n    document.body.style.backgroundColor = '';\n  }\n\n  componentDidUpdate(prevState) {\n    if (\n      this.props.playbackSequence.length !== prevState.playbackSequence.length\n    ) {\n      setTimeout(() => {\n        this.showPlaybackSequence();\n      }, 1000);\n    }\n  }\n\n  showPlaybackSequence = () => {\n    const { props } = this;\n    (async () => {\n      props.haltInput();\n\n      for (\n        let i = 0;\n        i < props.playbackSequence.length;\n        await simonSaysHelpers.delay(500)\n      ) {\n        let currentButton = this.refs[props.playbackSequence[i++]];\n        currentButton.buttonPress();\n      }\n\n      await props.allowInput();\n    })();\n  };\n\n  render() {\n    const { props } = this;\n    const {\n      score,\n      isPlaying,\n      startGame,\n      inputPause,\n      changeTheme,\n      colorScheme,\n      buttonPress,\n      buttonColors,\n    } = props;\n\n    const buttonComponents = buttonColors[colorScheme].map(\n      (buttonColor, index) => (\n        <Button\n          key={index}\n          ref={index}\n          index={index}\n          color={buttonColor}\n          isPlaying={isPlaying}\n          inputPause={inputPause}\n          buttonPress={buttonPress}\n        />\n      )\n    );\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          {buttonComponents}\n          <Controls\n            score={score}\n            isPlaying={isPlaying}\n            startGame={startGame}\n            changeTheme={changeTheme}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Container;\n","import React from 'react';\r\n\r\nconst Context = React.createContext();\r\n\r\nexport const Provider = Context.Provider;\r\n\r\nexport const withContext = Component => props => (\r\n  <Context.Consumer>\r\n    {context => <Component {...props} context={context} />}\r\n  </Context.Consumer>\r\n);\r\n","import React from 'react';\r\n\r\nimport { ShipSC, ShipContainerSC, FireSC } from './StyledComponents';\r\nimport { withContext } from '../../context';\r\n\r\nexport default withContext(\r\n  React.memo(props => {\r\n    const { shipX, rVelocity, lVelocity } = props.context;\r\n    const rotate = (rVelocity + lVelocity) * 2.5;\r\n\r\n    return (\r\n      <ShipContainerSC style={{ left: shipX }} rotate={rotate} className=\"Ship\">\r\n        <ShipSC />\r\n        <FireSC />\r\n      </ShipContainerSC>\r\n    );\r\n  })\r\n);\r\n","import React from 'react';\r\n\r\nimport { withContext } from '../../context';\r\nimport { ScoreSC } from './StyledComponents';\r\n\r\nexport default withContext(props => <ScoreSC>{props.context.score}</ScoreSC>);\r\n","import React from 'react';\r\nimport { GuideSC, KeycapSC } from './StyledComponents';\r\n\r\nexport default () => (\r\n  <GuideSC>\r\n    <KeycapSC>A</KeycapSC>\r\n    and\r\n    {<KeycapSC>D</KeycapSC>}\r\n    or\r\n    {<KeycapSC>←</KeycapSC>}\r\n    and\r\n    {<KeycapSC>→</KeycapSC>}\r\n  </GuideSC>\r\n);\r\n","import React from 'react';\r\n\r\nimport { ContainerSC } from './StyledComponents';\r\nimport { spaceBarrageHelpers } from '../../helpers';\r\n\r\nimport Ship from './Ship';\r\nimport Score from './Score';\r\nimport Guide from './Guide';\r\n\r\nexport default class Container extends React.Component {\r\n  render() {\r\n    const stars = spaceBarrageHelpers.addStars(10);\r\n    const enemies = spaceBarrageHelpers.addEnemies(15);\r\n\r\n    return (\r\n      <ContainerSC>\r\n        <Score />\r\n        {stars}\r\n        {enemies}\r\n        <Ship />\r\n        <Guide />\r\n      </ContainerSC>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport { GameOverSC } from './StyledComponents';\r\n\r\nexport default () => (\r\n  <GameOverSC>\r\n    <div>GAME OVER</div>\r\n    <br />\r\n    <span>press SPACE to reset</span>\r\n  </GameOverSC>\r\n);\r\n","import React from 'react';\n\nimport { ScreenSC } from './StyledComponents';\n\nimport Container from './Container';\nimport GameOver from './GameOver';\n\nexport default class Screen extends React.Component {\n  shouldComponentUpdate({ isShipHit }) {\n    if (isShipHit && !this.props.isShipHit) {\n      return true;\n    }\n    return false;\n  }\n\n  render() {\n    return (\n      <ScreenSC>\n        {this.props.isShipHit && <GameOver />}\n        <Container />\n      </ScreenSC>\n    );\n  }\n}\n","import React from 'react';\n\nimport Screen from './Screen';\n\nimport { Provider } from '../../context';\nimport { AppSC } from './StyledComponents';\nimport { spaceBarrageHelpers } from '../../helpers';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = spaceBarrageHelpers.initialState();\n  }\n\n  componentDidMount() {\n    document.body.style.backgroundColor = 'rgb(40, 44, 52)';\n    this.isPlaying = setInterval(this.tick, 50);\n    this.enemies = document.querySelectorAll('.Enemy');\n    window.addEventListener('keydown', this.handleKeys);\n  }\n\n  componentDidUpdate(p, { isShipHit }) {\n    if (isShipHit) clearInterval(this.isPlaying);\n  }\n\n  tick = () => this.setState(() => spaceBarrageHelpers.tick(this));\n\n  handleKeys = e =>\n    this.setState(() => spaceBarrageHelpers.handleKeys(this.state, e));\n\n  render() {\n    return (\n      <Provider value={this.state}>\n        <AppSC>\n          <Screen isShipHit={this.state.isShipHit} />\n        </AppSC>\n      </Provider>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\n\nimport * as actions from './actions';\nimport Index from './components/Index';\nimport Header from './components/Header';\nimport Connect4 from './components/Connect4';\nimport SimonSays from './components/SimonSays';\nimport SpaceBarrage from './components/SpaceBarrage';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { dispatch } = props;\n    this.dispatch = dispatch;\n\n    this.addPiece = bindActionCreators(actions.addPiece, dispatch);\n    this.resetGame = bindActionCreators(actions.resetGame, dispatch);\n\n    this.startGame = bindActionCreators(actions.startGame, dispatch);\n    this.haltInput = bindActionCreators(actions.haltInput, dispatch);\n    this.allowInput = bindActionCreators(actions.allowInput, dispatch);\n    this.buttonPress = bindActionCreators(actions.buttonPress, dispatch);\n    this.changeTheme = bindActionCreators(actions.changeTheme, dispatch);\n  }\n\n  render() {\n    const { connect4, simonSays } = this.props;\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <>\n            <Header />\n            <Switch>\n              <Route exact path={'/'} render={() => <Index />} />\n              <Route\n                path={'/simonsays'}\n                render={() => (\n                  <SimonSays\n                    {...simonSays}\n                    startGame={this.startGame}\n                    haltInput={this.haltInput}\n                    allowInput={this.allowInput}\n                    buttonPress={this.buttonPress}\n                    changeTheme={this.changeTheme}\n                  />\n                )}\n              />\n              <Route\n                path={'/connect4'}\n                render={() => (\n                  <Connect4\n                    {...connect4}\n                    addPiece={this.addPiece}\n                    resetGame={this.resetGame}\n                  />\n                )}\n              />\n              <Route path={'/spacebarrage'} render={() => <SpaceBarrage />} />\n            </Switch>\n          </>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  const { connect4, simonSays } = state;\n  return {\n    connect4,\n    simonSays,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport reducer from './reducers';\nimport App from './App';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}